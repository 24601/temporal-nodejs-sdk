/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure', null, global);
goog.exportSymbol('proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure', null, global);
goog.exportSymbol('proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure', null, global);
goog.exportSymbol('proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure', null, global);
goog.exportSymbol('proto.temporal.api.errordetails.v1.NotFoundFailure', null, global);
goog.exportSymbol('proto.temporal.api.errordetails.v1.QueryFailedFailure', null, global);
goog.exportSymbol('proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure', null, global);
goog.exportSymbol('proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.temporal.api.errordetails.v1.NotFoundFailure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.temporal.api.errordetails.v1.NotFoundFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.temporal.api.errordetails.v1.NotFoundFailure.displayName = 'proto.temporal.api.errordetails.v1.NotFoundFailure';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.temporal.api.errordetails.v1.NotFoundFailure.prototype.toObject = function(opt_includeInstance) {
  return proto.temporal.api.errordetails.v1.NotFoundFailure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.temporal.api.errordetails.v1.NotFoundFailure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.errordetails.v1.NotFoundFailure.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentCluster: jspb.Message.getFieldWithDefault(msg, 1, ""),
    activeCluster: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.temporal.api.errordetails.v1.NotFoundFailure}
 */
proto.temporal.api.errordetails.v1.NotFoundFailure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.temporal.api.errordetails.v1.NotFoundFailure;
  return proto.temporal.api.errordetails.v1.NotFoundFailure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.temporal.api.errordetails.v1.NotFoundFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.temporal.api.errordetails.v1.NotFoundFailure}
 */
proto.temporal.api.errordetails.v1.NotFoundFailure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentCluster(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setActiveCluster(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.temporal.api.errordetails.v1.NotFoundFailure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.temporal.api.errordetails.v1.NotFoundFailure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.temporal.api.errordetails.v1.NotFoundFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.errordetails.v1.NotFoundFailure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentCluster();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getActiveCluster();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string current_cluster = 1;
 * @return {string}
 */
proto.temporal.api.errordetails.v1.NotFoundFailure.prototype.getCurrentCluster = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.temporal.api.errordetails.v1.NotFoundFailure.prototype.setCurrentCluster = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string active_cluster = 2;
 * @return {string}
 */
proto.temporal.api.errordetails.v1.NotFoundFailure.prototype.getActiveCluster = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.temporal.api.errordetails.v1.NotFoundFailure.prototype.setActiveCluster = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure.displayName = 'proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure.prototype.toObject = function(opt_includeInstance) {
  return proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure.toObject = function(includeInstance, msg) {
  var f, obj = {
    startRequestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    runId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure}
 */
proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure;
  return proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure}
 */
proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartRequestId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRunId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRunId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string start_request_id = 1;
 * @return {string}
 */
proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure.prototype.getStartRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure.prototype.setStartRequestId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string run_id = 2;
 * @return {string}
 */
proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure.prototype.getRunId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure.prototype.setRunId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure.displayName = 'proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure.prototype.toObject = function(opt_includeInstance) {
  return proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    currentCluster: jspb.Message.getFieldWithDefault(msg, 2, ""),
    activeCluster: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure}
 */
proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure;
  return proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure}
 */
proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentCluster(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setActiveCluster(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCurrentCluster();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getActiveCluster();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string current_cluster = 2;
 * @return {string}
 */
proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure.prototype.getCurrentCluster = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure.prototype.setCurrentCluster = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string active_cluster = 3;
 * @return {string}
 */
proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure.prototype.getActiveCluster = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.temporal.api.errordetails.v1.NamespaceNotActiveFailure.prototype.setActiveCluster = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure.displayName = 'proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure.prototype.toObject = function(opt_includeInstance) {
  return proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientVersion: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    supportedVersions: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure}
 */
proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure;
  return proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure}
 */
proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSupportedVersions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSupportedVersions();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string client_version = 1;
 * @return {string}
 */
proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure.prototype.getClientVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure.prototype.setClientVersion = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_name = 2;
 * @return {string}
 */
proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure.prototype.getClientName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure.prototype.setClientName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string supported_versions = 3;
 * @return {string}
 */
proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure.prototype.getSupportedVersions = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.temporal.api.errordetails.v1.ClientVersionNotSupportedFailure.prototype.setSupportedVersions = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure.displayName = 'proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure.prototype.toObject = function(opt_includeInstance) {
  return proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure.toObject = function(includeInstance, msg) {
  var f, obj = {
    serverVersion: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientSupportedServerVersions: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure}
 */
proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure;
  return proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure}
 */
proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientSupportedServerVersions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServerVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientSupportedServerVersions();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string server_version = 1;
 * @return {string}
 */
proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure.prototype.getServerVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure.prototype.setServerVersion = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_supported_server_versions = 2;
 * @return {string}
 */
proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure.prototype.getClientSupportedServerVersions = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.temporal.api.errordetails.v1.ServerVersionNotSupportedFailure.prototype.setClientSupportedServerVersions = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure.displayName = 'proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure.prototype.toObject = function(opt_includeInstance) {
  return proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure}
 */
proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure;
  return proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure}
 */
proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure.displayName = 'proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure.prototype.toObject = function(opt_includeInstance) {
  return proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure}
 */
proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure;
  return proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure}
 */
proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.temporal.api.errordetails.v1.QueryFailedFailure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.temporal.api.errordetails.v1.QueryFailedFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.temporal.api.errordetails.v1.QueryFailedFailure.displayName = 'proto.temporal.api.errordetails.v1.QueryFailedFailure';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.temporal.api.errordetails.v1.QueryFailedFailure.prototype.toObject = function(opt_includeInstance) {
  return proto.temporal.api.errordetails.v1.QueryFailedFailure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.temporal.api.errordetails.v1.QueryFailedFailure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.errordetails.v1.QueryFailedFailure.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.temporal.api.errordetails.v1.QueryFailedFailure}
 */
proto.temporal.api.errordetails.v1.QueryFailedFailure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.temporal.api.errordetails.v1.QueryFailedFailure;
  return proto.temporal.api.errordetails.v1.QueryFailedFailure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.temporal.api.errordetails.v1.QueryFailedFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.temporal.api.errordetails.v1.QueryFailedFailure}
 */
proto.temporal.api.errordetails.v1.QueryFailedFailure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.temporal.api.errordetails.v1.QueryFailedFailure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.temporal.api.errordetails.v1.QueryFailedFailure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.temporal.api.errordetails.v1.QueryFailedFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.errordetails.v1.QueryFailedFailure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.temporal.api.errordetails.v1);
